import { useState } from "react";
import { Sheet, SheetContent, SheetTrigger } from "@/components/ui/sheet";
import { Button } from "@/components/ui/button";
import { MessageCircle } from "lucide-react";
import { Input } from "@/components/ui/input";

export const initialChatHistory = [
  { role: "user", message: "–Ø–∫ –º–µ–Ω—ñ –∑–º–µ–Ω—à–∏—Ç–∏ –≤–∏—Ç—Ä–∞—Ç–∏ –Ω–∞ –ø—Ä–æ–¥—É–∫—Ç–∏?" },
  { role: "assistant", message: "–û—Å—å –∫—ñ–ª—å–∫–∞ –ø–æ—Ä–∞–¥:\n1. –°–∫–ª–∞–¥–∞–π—Ç–µ —Å–ø–∏—Å–æ–∫ –ø–æ–∫—É–ø–æ–∫ –∑–∞–∑–¥–∞–ª–µ–≥—ñ–¥—å\n2. –ö—É–ø—É–π—Ç–µ –ø—Ä–æ–¥—É–∫—Ç–∏ –æ–ø—Ç–æ–º\n3. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –ø—Ä–æ–≥—Ä–∞–º–∏ –ª–æ—è–ª—å–Ω–æ—Å—Ç—ñ\n4. –°—Ç–µ–∂—Ç–µ –∑–∞ –∞–∫—Ü—ñ—è–º–∏ —Ç–∞ –∑–Ω–∏–∂–∫–∞–º–∏" },
  { role: "user", message: "–Ø–∫—ñ –∫–∞—Ç–µ–≥–æ—Ä—ñ—ó –≤–∏—Ç—Ä–∞—Ç –Ω–∞–π–±—ñ–ª—å—à—ñ?" },
  { role: "assistant", message: "–ù–∞–π–±—ñ–ª—å—à—ñ –≤–∏—Ç—Ä–∞—Ç–∏ —É –≤–∞—Å –Ω–∞:\n1. –ü—Ä–æ–¥—É–∫—Ç–∏ —Ç–∞ —Å—É–ø–µ—Ä–º–∞—Ä–∫–µ—Ç–∏ - 15000 –≥—Ä–Ω\n2. –ü–æ–¥–æ—Ä–æ–∂—ñ - 10000 –≥—Ä–Ω\n3. –î—ñ–º —Ç–∞ –∫–æ–º—É–Ω–∞–ª–∫–∞ - 9000 –≥—Ä–Ω" },
];

const AIChatPanel = () => {
  const [messages, setMessages] = useState(initialChatHistory);
  const [newMessage, setNewMessage] = useState("");

  const handleSendMessage = (e: React.FormEvent) => {
    e.preventDefault();
    if (!newMessage.trim()) return;

    const userMessage = { role: "user", message: newMessage };
    setMessages([...messages, userMessage]);

    // Simulate AI response
    setTimeout(() => {
      const aiResponse = {
        role: "assistant",
        message: "–î—è–∫—É—é –∑–∞ –≤–∞—à–µ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è! –Ø –æ–ø—Ä–∞—Ü—å–æ–≤—É—é –≤–∞—à –∑–∞–ø–∏—Ç —ñ –Ω–µ–∑–∞–±–∞—Ä–æ–º –Ω–∞–¥–∞–º –≤—ñ–¥–ø–æ–≤—ñ–¥—å."
      };
      setMessages(prev => [...prev, aiResponse]);
    }, 1000);

    setNewMessage("");
  };

  return (
    <Sheet>
      <SheetTrigger asChild>
        <Button
          size="icon"
          className="fixed bottom-6 right-6 rounded-full w-14 h-14 shadow-lg hover:shadow-xl transition-all bg-dark-purple hover:bg-dark-purple/90"
        >
          <MessageCircle className="w-6 h-6" />
        </Button>
      </SheetTrigger>
      <SheetContent side="right" className="w-[400px] sm:w-[540px] bg-dark-purple border-l-2 border-primary/30">
        <div className="h-full flex flex-col">
          <h2 className="text-xl font-semibold mb-4 text-white">–ß–∞—Ç –∑ –®–Ü-–ø–æ–º—ñ—á–Ω–∏–∫–æ–º</h2>
          <div className="flex-grow bg-secondary/20 rounded-lg p-4 mb-4 overflow-auto">
            {messages.map((msg, index) => (
              <div
                key={index}
                className={`mb-4 ${
                  msg.role === "assistant"
                    ? "bg-primary/10 rounded-lg p-3"
                    : "bg-secondary/10 rounded-lg p-3"
                }`}
              >
                <div className="font-medium mb-1 text-white">
                  {msg.role === "assistant" ? "ü§ñ –ü–æ–º—ñ—á–Ω–∏–∫" : "üë§ –í–∏"}
                </div>
                <div className="whitespace-pre-wrap text-gray-300">{msg.message}</div>
              </div>
            ))}
          </div>
          <form onSubmit={handleSendMessage} className="flex gap-2">
            <Input
              value={newMessage}
              onChange={(e) => setNewMessage(e.target.value)}
              placeholder="–ù–∞–ø–∏—à—ñ—Ç—å –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è..."
              className="flex-grow bg-secondary/50 border-primary/30 text-white placeholder:text-gray-400"
            />
            <Button type="submit" className="bg-primary hover:bg-primary/90">–ù–∞–¥—ñ—Å–ª–∞—Ç–∏</Button>
          </form>
        </div>
      </SheetContent>
    </Sheet>
  );
};

export default AIChatPanel;
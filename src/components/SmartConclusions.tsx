import { useEffect } from "react";
import { Card } from "@/components/ui/card";
import { ScrollArea } from "@/components/ui/scroll-area";
import { Zap } from "lucide-react";
import { getCategoryLimits } from "@/utils/localStorage";
import { convertToUAH } from "@/utils/currency";
import { toast } from "sonner";
import { financialTips } from "@/utils/financialTips";

const insights = [
  {
    title: "–ê–Ω–∞–ª—ñ–∑ –≤–∏—Ç—Ä–∞—Ç",
    content: "–í–∞—à—ñ –≤–∏—Ç—Ä–∞—Ç–∏ –Ω–∞ —Ä–æ–∑–≤–∞–≥–∏ –∑—Ä–æ—Å–ª–∏ –Ω–∞ 15% —Ü—å–æ–≥–æ –º—ñ—Å—è—Ü—è. –†–µ–∫–æ–º–µ–Ω–¥—É—î–º–æ –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –±—é–¥–∂–µ—Ç.",
    metric: "+15%",
    icon: "üòï",
    bgColor: "bg-red-50 dark:bg-red-900/20"
  },
  {
    title: "–î–æ—Å—è–≥–Ω–µ–Ω–Ω—è —Ü—ñ–ª–µ–π",
    content: "–í—ñ—Ç–∞—î–º–æ! –í–∏ –¥–æ—Å—è–≥–ª–∏ –º–µ—Ç–∏ –∑–∞–æ—â–∞–¥–∂–µ–Ω—å –Ω–∞ —Ü–µ–π –∫–≤–∞—Ä—Ç–∞–ª —É —Ä–æ–∑–º—ñ—Ä—ñ ‚Ç¥19,250!",
    metric: "100%",
    icon: "üéâ",
    bgColor: "bg-green-50 dark:bg-green-900/20"
  },
  {
    title: "–û–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—è –ø—ñ–¥–ø–∏—Å–æ–∫",
    content: "–ó–Ω–∞–π–¥–µ–Ω–æ 3 –Ω–µ–≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω—ñ –ø—ñ–¥–ø–∏—Å–∫–∏ –Ω–∞ –∑–∞–≥–∞–ª—å–Ω—É —Å—É–º—É ‚Ç¥770/–º—ñ—Å—è—Ü—å",
    metric: "‚Ç¥770",
    icon: "ü§î",
    bgColor: "bg-yellow-50 dark:bg-yellow-900/20"
  },
  {
    title: "–ï–∫–æ–Ω–æ–º—ñ—è –Ω–∞ –∫–æ–º—É–Ω–∞–ª—å–Ω–∏—Ö",
    content: "–í–∏ –∑–∞–æ—â–∞–¥–∏–ª–∏ 20% –Ω–∞ –∫–æ–º—É–Ω–∞–ª—å–Ω–∏—Ö –ø–ª–∞—Ç–µ–∂–∞—Ö –ø–æ—Ä—ñ–≤–Ω—è–Ω–æ –∑ –º–∏–Ω—É–ª–∏–º –º—ñ—Å—è—Ü–µ–º",
    metric: "-20%",
    icon: "üí´",
    bgColor: "bg-blue-50 dark:bg-blue-900/20"
  },
  {
    title: "–ü–µ—Ä–µ–≤–∏—â–µ–Ω–Ω—è –±—é–¥–∂–µ—Ç—É",
    content: "–ö–∞—Ç–µ–≥–æ—Ä—ñ—è '–á–∂–∞ —Ç–∞ —Ä–µ—Å—Ç–æ—Ä–∞–Ω–∏' –ø–µ—Ä–µ–≤–∏—â–∏–ª–∞ –º—ñ—Å—è—á–Ω–∏–π –±—é–¥–∂–µ—Ç –Ω–∞ ‚Ç¥1,200",
    metric: "+‚Ç¥1,200",
    icon: "üò°",
    bgColor: "bg-red-50 dark:bg-red-900/20"
  },
  {
    title: "–Ü–Ω–≤–µ—Å—Ç–∏—Ü—ñ–π–Ω–∞ –º–æ–∂–ª–∏–≤—ñ—Å—Ç—å",
    content: "–ù–∞ –æ—Å–Ω–æ–≤—ñ –≤–∞—à–∏—Ö –∑–∞–æ—â–∞–¥–∂–µ–Ω—å, —Ä–µ–∫–æ–º–µ–Ω–¥—É—î–º–æ —Ä–æ–∑–≥–ª—è–Ω—É—Ç–∏ —ñ–Ω–≤–µ—Å—Ç–∏—Ü—ñ–π–Ω—ñ –æ–ø—Ü—ñ—ó",
    metric: "‚Ç¥5,000",
    icon: "üíé",
    bgColor: "bg-purple-50 dark:bg-purple-900/20"
  }
];

const SmartConclusions = () => {
  const limits = getCategoryLimits();

  useEffect(() => {
    // Show random tip every 5 minutes
    const showRandomTip = () => {
      const randomTip = financialTips[Math.floor(Math.random() * financialTips.length)];
      toast(randomTip, {
        duration: 10000,
        dismissible: true,
        position: "top-center",
      });
    };

    // Show first tip after 1 minute
    const initialTimeout = setTimeout(showRandomTip, 60000);
    
    // Show tips every 5 minutes
    const interval = setInterval(showRandomTip, 300000);

    return () => {
      clearTimeout(initialTimeout);
      clearInterval(interval);
    };
  }, []);

  return (
    <Card className="p-6 animate-fade-up [animation-delay:600ms] dark:bg-gray-800 shadow-lg border-2 border-primary/20 h-full">
      <div className="flex items-center space-x-2 text-amber-500 mb-6">
        <Zap className="w-6 h-6" />
        <h2 className="text-2xl font-bold text-amber-500">–†–æ–∑—É–º–Ω—ñ –≤–∏—Å–Ω–æ–≤–∫–∏</h2>
      </div>
      
      <div className="flex flex-col h-[calc(100%-4rem)] gap-6">
        <ScrollArea className="flex-grow pr-4">
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
            {insights.map((insight, index) => (
              <div
                key={index}
                className={`p-4 rounded-lg ${insight.bgColor} hover:scale-[1.02] transition-transform duration-200 shadow-sm dark:shadow-gray-800/50`}
              >
                <div className="flex items-center space-x-3 mb-3">
                  <span className="text-2xl">{insight.icon}</span>
                  <h3 className="font-semibold text-lg text-gray-800">{insight.title}</h3>
                </div>
                <p className="text-sm text-gray-600 dark:text-gray-300 mb-2">{insight.content}</p>
                <div className="mt-2">
                  <span className="text-sm font-medium text-primary bg-primary/10 px-2 py-1 rounded-full">
                    {insight.metric}
                  </span>
                </div>
              </div>
            ))}
          </div>
        </ScrollArea>

        {limits.length > 0 && (
          <div className="mt-auto">
            <h3 className="text-lg font-semibold mb-4 text-gray-200">–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ñ –ª—ñ–º—ñ—Ç–∏ –≤–∏—Ç—Ä–∞—Ç</h3>
            <div className="space-y-3">
              {limits.map((limit, index) => (
                <div key={index} className="p-3 bg-secondary/50 rounded-lg">
                  <div className="flex justify-between items-center">
                    <span className="text-gray-300">{limit.category}</span>
                    <span className="font-medium text-primary">‚Ç¥{convertToUAH(limit.limit)}</span>
                  </div>
                </div>
              ))}
            </div>
          </div>
        )}
      </div>
    </Card>
  );
};

export default SmartConclusions;